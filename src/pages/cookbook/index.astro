---
import { getCollection } from 'astro:content';
import Base from '@layouts/Base.astro';
import Hero from '@components/Hero.astro';
import SvgGenerator from '@components/SvgGenerator.astro';
import Search from '@components/Search.astro';
import Card from '@components/Card.astro';

const baseURL = import.meta.env.BASE_URL;
const allCookbookRecipes = await getCollection('cookbook');

const pageTitle = 'Cookbook Home';
const heroTitle =
  '<span class="flex gap-3"><span class="wave">üçú</span>Cookbook</span>';
const heroDescription =
  'Browse my collection of recipes gathered over the years.';
const backgroundSvgs = [
  'general/circle-scatter-haikei-1',
  'general/circle-scatter-haikei-2',
  'general/circle-scatter-haikei-3',
  'general/circle-scatter-haikei-4',
  'general/circle-scatter-haikei-5',
  'general/circle-scatter-haikei-6',
  'general/circle-scatter-haikei-7',
];
---

<Base title={pageTitle} indexForSearch={false} includeSearchComponent={true}>
  <div id="hero" class="dark:bg-medium relative overflow-hidden bg-white">
    <Hero
      title={heroTitle}
      description={heroDescription}
      isCentered={false}
      classes="relative z-10"
    />
    {
      backgroundSvgs.map((svg) => (
        <SvgGenerator
          svg={svg}
          className="absolute top-0 right-0 bottom-0 left-0 min-h-full min-w-full max-h-none max-w-none z-0 hidden"
        />
      ))
    }
  </div>

  <span class="block pb-8"></span>

  <div class="container">
    <Search id="search" />
  </div>

  <span class="block pb-8"></span>

  <section class="container">
    <ul class="tablet:grid-cols-2 laptop:grid-cols-4 grid grid-cols-1 gap-8">
      {
        allCookbookRecipes.map((recipe) => (
          <Card
            href={`${baseURL}cookbook/recipes/${recipe.id}/`}
            title={recipe.data.title}
            body={recipe.data.description}
            tags={recipe.data.tags}
          />
        ))
      }
    </ul>

    <span class="block pb-[200px]"></span>
  </section>
</Base>

<script is:inline data-astro-rerun>
  // Randomly show hero background SVG
  backgroundSvgs = document
    .getElementById('hero')
    ?.querySelectorAll('svg.absolute');

  if (backgroundSvgs?.length) {
    const randomIndex = Math.floor(Math.random() * backgroundSvgs.length);
    backgroundSvgs[randomIndex].classList.remove('hidden');
  }
</script>
