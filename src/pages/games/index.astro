---
import {
  getGameNews,
  getPlayerData,
  getOwnedGames,
  getRecentGames,
} from 'src/utilities/steam';

import Base from '@layouts/Base.astro';
import HeroBackground from '@components/HeroSpace.astro';
import { Image } from 'astro:assets';
import catIcon from '@images/games/cat-500.png';
import drinkIcon from '@images/games/drink-500.png';
import cupcakeIcon from '@images/games/cupcake-500.png';
import SvgGenerator from '@components/SvgGenerator.astro';

const pageTitle = 'Gaming Center';
const heroTitle =
  "<span class='text-gradient block pb-10'>Gaming Center</span>";
const heroDescription = '';

const gameNews = await getGameNews('1284190', 3, 500);
const playerData = await getPlayerData();
const ownedGames = await getOwnedGames();
const mostRecentGames = await getRecentGames();
const mostRecentPlayedGame = mostRecentGames[0]?.name;

// console.log(ownedGames);

// mostRecentGames = [{ appid, name, playtime_2weeks, playtime_forever, img_icon_url, playtime_deck_forever }, ...]

// playtime is in minutes

const staticStats = [
  {
    attribute: 'strength',
    value: 10,
  },
  {
    attribute: 'dexterity',
    value: 16,
  },
  {
    attribute: 'constitution',
    value: 9,
  },
  {
    attribute: 'intelligence',
    value: 19,
  },
  {
    attribute: 'wisdom',
    value: 20,
  },
  {
    attribute: 'charisma',
    value: 11,
  },
];

const codingStats = [
  { attribute: 'JavaScript', value: 9 },
  { attribute: 'TypeScript', value: 7 },
  { attribute: 'HTML5', value: 9 },
  { attribute: 'CSS3', value: 9 },
  { attribute: 'TailwindCSS', value: 9 },
  { attribute: 'AlpineJS', value: 8 },
  { attribute: 'Hugo (SSG)', value: 8 },
  { attribute: 'AstroJS', value: 7 },
  { attribute: '11ty', value: 6 },
  { attribute: 'React', value: 5 },
  { attribute: 'Bootstrap/Materialize', value: 7 },
  { attribute: 'Express.js', value: 5 },
  { attribute: 'Typesense', value: 7 },
  { attribute: 'Algolia', value: 7 },
  { attribute: 'NodeJS', value: 8 },
  { attribute: 'WordPress', value: 5 },
  { attribute: 'Wix', value: 5 },
  { attribute: 'Google Analytics', value: 7 },
  { attribute: 'AWS Amplify', value: 7 },
  { attribute: 'Datadog', value: 6 },
  { attribute: 'DatoCMS', value: 7 },
];
---

<Base
  title={pageTitle}
  indexForSearch={false}
  includeSearchComponent={false}
  classes="bg-medium"
>
  <HeroBackground title={heroTitle} description={heroDescription} />

  <section class="relative bg-medium">
    <div
      id="player-card-holder"
      class="card-collapsed laptop:scroll-mt-20 relative bottom-0 left-0 right-0 m-auto w-full"
    >
      <div
        id="player-card"
        class="text-light bg-blue-dark dark:bg-medium py-6 px-12 flex flex-col items-center transition-shadow duration-500 shadow-shallow shadow-dark/10 dark:shadow-light/10 hover:shadow-dark dark:hover:shadow-green-dark"
      >
        <h2>
          <a
            href={playerData.profileurl}
            target="_blank"
            class="relative flex items-center gap-2 w-max hover:text-green-emerald"
          >
            {playerData.personaname}
            <span class="sr-only">View Steam profile (Opens in a new tab)</span>
            <SvgGenerator svg="icons/external-link-blue" className="w-6 h-6" />
          </a>
        </h2>

        <p
          class="flex gap-2 items-center uppercase text-xs tracking-wide font-mono"
        >
          Status <span class="sr-only">{playerData.stateText}</span>
          <span
            title={playerData.stateText}
            class={`block w-3 h-3 rounded-full shadow-2xl shadow-black ${playerData.stateClasses}`}
          ></span>
        </p>

        <span class="block pb-4"></span>

        <Image
          loading="eager"
          src={playerData.avatarfull}
          alt="Profile avatar"
          width={playerData.avatarfull.width
            ? playerData.avatarfull.width
            : 144}
          height={playerData.avatarfull.height
            ? playerData.avatarfull.height
            : 144}
          class="vibrate w-36 h-36 rounded-full border border-green-emerald"
        />

        {
          playerData.gameextrainfo && (
            <>
              <span class="block pb-4" />
              <p class="uppercase text-sm text-center">
                In game
                <span class="block mt-1.5 py-1 px-2 bg-green-dark rounded-sm text-xs tracking-wide font-mono shadow-2xl shadow-black">
                  {playerData.gameextrainfo}
                </span>
              </p>
            </>
          )
        }
        {
          !playerData.gameextrainfo && mostRecentPlayedGame && (
            <>
              <span class="block pb-4" />
              <p class="uppercase text-sm text-center">
                Most Recently Seen
                <span class="block mt-1.5 py-1 px-2 bg-medium/75 dark:bg-light/25 rounded-sm text-xs tracking-wide font-mono shadow-2xl shadow-black">
                  {mostRecentPlayedGame}
                </span>
              </p>
            </>
          )
        }

        <div class="w-full group">
          <hr
            class="mt-4 border-green-emerald transition-transform duration-500 group-hover:scale-105"
          />

          <button
            id="view-full-profile"
            class="flex items-center justify-center gap-2 py-4 w-full text-sm font-mono uppercase hover:font-bold"
          >
            <span
              class="group-hover:translate-y-1.5 transition-transform duration-500"
            >
              <span id="button-text" class="mr-1">VIEW FULL PROFILE</span>
              <SvgGenerator
                id="button-icon"
                svg="icons/arrow-bubbles-right-green"
                className="inline w-4 h-4 rotate-90 group-hover:scale-125 transition-transform duration-500"
              />
            </span>
          </button>
        </div>

        <!-- Profile Details -->
        <section id="profile-details" class="collapsed">
          <nav id="profile-nav" class="w-full overflow-x-auto">
            <ul class="flex justify-center gap-6 w-max mx-auto">
              <li class="whitespace-nowrap">
                <button
                  id="button--about"
                  class="px-4 py-2 border-b border-b-light hover:text-green-emerald transition-all duration-500 uppercase active"
                >
                  ABOUT
                </button>
              </li>
              <li class="whitespace-nowrap">
                <button
                  id="button--stats"
                  class="px-4 py-2 border-b border-b-light hover:text-green-emerald transition-all duration-500 uppercase"
                  >STATS</button
                >
              </li>
              <li class="whitespace-nowrap hidden">
                <button
                  id="button--friends"
                  class="px-4 py-2 border-b border-b-light hover:text-green-emerald transition-all duration-500 uppercase"
                  >FRIENDS</button
                >
              </li>
              <li class="whitespace-nowrap hidden">
                <button
                  id="button--recent-games"
                  class="px-4 py-2 border-b border-b-light hover:text-green-emerald transition-all duration-500 uppercase"
                  >RECENT GAMES</button
                >
              </li>
              <li class="whitespace-nowrap hidden">
                <button
                  id="button--owned-games"
                  class="px-4 py-2 border-b border-b-light hover:text-green-emerald transition-all duration-500 uppercase"
                  >OWNED GAMES</button
                >
              </li>
            </ul>
          </nav>

          <div id="profile-panel" class="py-6">
            <div id="panel--about" class="panel">
              <div
                class="grid grid-cols-3 gap-6 bg-medium dark:bg-blue-dark/50 px-3 pt-3 pb-4 rounded-3xl"
              >
                <div class="col-span-1 flex flex-col justify-between">
                  <p
                    class="uppercase text-center pb-3 font-bold text-sm tracking-wider min-h-[52px] tablet:min-h-10"
                  >
                    SPIRIT ANIMAL
                  </p>
                  <div
                    class="h-full flex flex-col tablet:flex-row gap-3 items-center justify-between tablet:justify-center"
                  >
                    <Image
                      src={catIcon}
                      alt="Cat"
                      loading="lazy"
                      width={500}
                      height={500}
                      class="rounded-full w-[40px] h-[40px] tablet:w-[50px] tablet:h-[50px]"
                    />
                    <p
                      class="text-center tablet:text-left font-mono text-sm pb-1 border-b dark:border-light"
                    >
                      CAT
                    </p>
                  </div>
                </div>
                <div class="col-span-1 flex flex-col justify-between">
                  <p
                    class="uppercase text-center pb-3 font-bold text-sm tracking-wider min-h-[52px] tablet:min-h-10"
                  >
                    FAVORITE DRINK
                  </p>
                  <div
                    class="h-full flex flex-col tablet:flex-row gap-3 items-center justify-between tablet:justify-center"
                  >
                    <Image
                      src={drinkIcon}
                      alt="Drink"
                      loading="lazy"
                      width={500}
                      height={500}
                      class="rounded-full w-[40px] h-[40px] tablet:w-[50px] tablet:h-[50px]"
                    />
                    <p
                      class="text-center tablet:text-left font-mono text-sm pb-1 border-b dark:border-light"
                    >
                      MATCHA LATTE
                    </p>
                  </div>
                </div>
                <div class="col-span-1 flex flex-col justify-between">
                  <p
                    class="uppercase text-center pb-3 font-bold text-sm tracking-wider min-h-[52px] tablet:min-h-10"
                  >
                    BIRTHDAY
                  </p>
                  <div
                    class="h-full flex flex-col tablet:flex-row gap-3 items-center justify-between tablet:justify-center"
                  >
                    <Image
                      src={cupcakeIcon}
                      alt="Cupcake"
                      loading="lazy"
                      width={500}
                      height={500}
                      class="rounded-full w-[40px] h-[40px] tablet:w-[50px] tablet:h-[50px]"
                    />
                    <p
                      class="text-center tablet:text-left font-mono text-sm pb-1 border-b dark:border-light"
                    >
                      JAN 10
                    </p>
                  </div>
                </div>
              </div>

              <span class="block pb-12"></span>

              <div class="p-2 flex gap-6 items-center">
                <p
                  class="uppercase text-center font-bold text-sm tracking-wider"
                >
                  Abilities:
                </p>
                <p class="font-mono text-sm tablet:text-base tablet:leading-5">
                  Technologist, Web developer, Gamer, Cat parent
                </p>
              </div>

              <span class="block pb-10"></span>

              <div class="p-2">
                <p class="italic text-sm">
                  "Lord Arbiter", a Capricorn also known as "David", thrives on
                  the web and in the gaming world, but loves spending time with
                  his husband and two cats. He also enjoys gaming with friends,
                  building websites, learning new technologies, and drinking
                  matcha lattes. David excels in front-end development and has a
                  passion for creating beautiful, accessible, and functional
                  websites.
                </p>
              </div>
            </div>

            <div id="panel--stats" class="panel hidden">
              {
                codingStats.map((stat) => (
                  <div id={stat.attribute} class="grid grid-cols-6 gap-2">
                    <div class="col-span-2 tablet:col-span-1">
                      <p class="font-mono text-xs tablet:text-sm uppercase">
                        {stat.attribute}
                      </p>
                    </div>
                    <div class="col-span-1">
                      <p class="text-xs tablet:text-sm uppercase text-right">
                        {stat.value}
                      </p>
                    </div>
                    <div class="col-span-3 tablet:col-span-4 flex items-center">
                      <span
                        class="block h-2/3 green-shimmer"
                        style={`width: ${(stat.value / 20) * 100}%`}
                      />
                    </div>
                  </div>
                ))
              }
            </div>
            <div id="panel--friends" class="panel hidden">FRIENDS</div>
            <div id="panel--recent-games" class="panel hidden">
              <Image
                loading="lazy"
                src={`http://media.steampowered.com/steamcommunity/public/images/apps/${mostRecentGames[1]?.appid}/${mostRecentGames[1]?.img_icon_url}.jpg`}
                alt="Game icon"
                width={40}
                height={40}
                class="vibrate w-10 h-10 rounded-full border border-green-emerald"
              />
            </div>
            <div id="panel--owned-games" class="panel hidden">OWNED GAMES</div>

            <span class="block pb-16"></span>
          </div>
        </section>
      </div>
    </div>
  </section>

  <style>
    #player-card-holder {
      transition-property: all;
      transition-timing-function: var(
        --tw-ease,
        var(--default-transition-timing-function)
      );
      transition-duration: var(
        --tw-duration,
        var(--default-transition-duration)
      );
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
    .card-expanded {
      top: 0;
      max-width: 100%;

      #player-card {
        border-radius: 0;
      }
    }

    .card-collapsed {
      top: -120px;
      max-width: 350px;

      #player-card {
        border-radius: var(--radius-xl);
      }
    }

    button.active {
      border-bottom-color: var(--color-green-emerald);
    }

    #profile-details {
      transition-property: opacity;
      transition-timing-function: var(
        --tw-ease,
        var(--default-transition-timing-function)
      );
      transition-duration: var(
        --tw-duration,
        var(--default-transition-duration)
      );
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }

    #profile-details.collapsed {
      opacity: 0;
      width: 0;
      height: 0;
    }

    #profile-details.collapsed * {
      display: none;
    }

    #profile-details.expanded {
      opacity: 100;
      width: 100%;
      height: 100%;
    }

    @media (width >= 1024px) {
      #profile-details.expanded {
        width: max-content;
        max-width: 100%;
      }
    }

    #profile-nav::-webkit-scrollbar {
      display: none;
    }

    #profile-nav {
      -ms-overflow-style: none;
      scrollbar-width: none;
    }

    .panel {
      max-width: var(--breakpoint-tablet);
      margin-inline: auto;
    }
  </style>

  <script>
    document.addEventListener('astro:page-load', () => {
      const playerCardHolder = document.getElementById('player-card-holder');
      const viewFullProfileButton =
        document.getElementById('view-full-profile');
      const viewProfileButtonText =
        viewFullProfileButton?.querySelector('#button-text');
      const viewProfileButtonIcon =
        viewFullProfileButton?.querySelector('#button-icon');
      const profileDetails = document.getElementById('profile-details');
      const profileNavButtons = document.querySelectorAll(
        '#profile-nav button',
      );
      const profilePanels = document.querySelectorAll(
        '#profile-panel div[id^="panel--"]',
      );
      const greenBars = document.querySelectorAll('.green-shimmer');

      greenBars.forEach((bar) => {
        const time = Math.random() * 2 + 1;
        (bar as HTMLElement).style.setProperty(
          '--randomized-animation-time',
          `${time}s`,
        );
      });

      viewFullProfileButton?.addEventListener('click', () => {
        if (playerCardHolder?.classList.contains('card-collapsed')) {
          playerCardHolder?.classList.replace(
            'card-collapsed',
            'card-expanded',
          );
          if (viewProfileButtonText)
            viewProfileButtonText.textContent = 'HIDE PROFILE DETAILS';
          if (viewProfileButtonIcon)
            viewProfileButtonIcon.classList.replace('rotate-90', '-rotate-90');
          profileDetails?.classList.replace('collapsed', 'expanded');
        } else {
          playerCardHolder?.classList.replace(
            'card-expanded',
            'card-collapsed',
          );
          if (viewProfileButtonText)
            viewProfileButtonText.textContent = 'VIEW FULL PROFILE';
          if (viewProfileButtonIcon)
            viewProfileButtonIcon.classList.replace('-rotate-90', 'rotate-90');
          profileDetails?.classList.replace('expanded', 'collapsed');
        }

        // wait 0.25s for the card to expand/collapse, then scroll into view
        setTimeout(() => {
          playerCardHolder?.scrollIntoView({
            behavior: 'smooth',
            block: 'start',
          });
        }, 250);
      });

      profileNavButtons.forEach((button) => {
        button.addEventListener('click', () => {
          profileNavButtons.forEach((button) =>
            button.classList.remove('active'),
          );
          button.classList.add('active');

          profilePanels.forEach((panel) => panel.classList.add('hidden'));
          const panelId = button.id.replace('button--', 'panel--');
          const panelToShow = document.getElementById(panelId);
          if (panelToShow) panelToShow.classList.remove('hidden');
        });
      });
    });
  </script>
</Base>
