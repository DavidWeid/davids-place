---
interface Props {
  name: string;
  jobTitle: string;
  company: string;
  description: string;
  url: string;
  imageUrl: string;
  linkedin?: string;
  github?: string;
  email?: string;
}

const {
  name,
  jobTitle,
  company,
  description,
  url,
  imageUrl,
  linkedin,
  github,
  email,
} = Astro.props;

const personSchema = {
  '@context': 'https://schema.org',
  '@type': 'Person',
  '@id': url,
  name: name,
  jobTitle: jobTitle,
  description: description,
  url: url,
  image: {
    '@type': 'ImageObject',
    url: imageUrl,
    width: '400',
    height: '400'
  },
  worksFor: {
    '@type': 'Organization',
    '@id': 'https://datadoghq.com',
    name: company,
    url: 'https://datadoghq.com',
  },
  knowsAbout: [
    'JavaScript',
    'TypeScript',
    'Web Development',
    'Frontend Development',
    'AstroJS',
    'Static Site Rendering',
    'TailwindCSS',
    'Accessibility',
    'Performance Optimization',
    'Node.js',
  ],
  sameAs: [...(linkedin ? [linkedin] : []), ...(github ? [github] : [])],
  ...(email && {
    email: email,
  }),
};
---

<script
  type="application/ld+json"
  is:inline
  set:html={JSON.stringify(personSchema)}
/>
