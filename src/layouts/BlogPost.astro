---
import Base from '@layouts/Base.astro';
import Hero from '@components/Hero.astro';
import HeroInfo from '@components/HeroInfo.astro';
import Badge from '@components/Badge.astro';
import ArticleSchema from '@components/ArticleSchema.astro';

interface Props {
  frontmatter: {
    title: string;
    description: string;
    pubDate: Date;
    author: string;
    image: {
      url: string;
      alt: string;
    };
    tags: string[];
  };
}

const { frontmatter } = Astro.props;
const { title, description, pubDate, author, tags } = frontmatter;
const pageTitle = `Blog Post: ${title}`;
const heroTitle = title;
const heroDescription = description;

// For ArticleSchema component
const currentUrl = new URL(Astro.request.url).href;
const displayDate =
  pubDate instanceof Date
    ? pubDate.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      })
    : new Date(pubDate).toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
      });
---

<Base title={pageTitle} description={description}>
  <Hero title={heroTitle} description={heroDescription}>
    <span class="block pb-4"></span>

    <div class="flex flex-wrap justify-center gap-8">
      <HeroInfo label="Date" value={displayDate} />
      <HeroInfo label="Author" value={author} />
    </div>

    <span class="block pb-8"></span>

    <span class="flex gap-2.5 justify-center">
      {
        tags.map((tag) => (
          <Badge tag={tag} clickable={false} variant="default" />
        ))
      }
    </span>
  </Hero>

  <hr class="green-blue-shimmer-slow h-1 border-0" />

  <div
    data-tags={`| tags: ${tags.join(', ')}`}
    class="bg-light dark:bg-medium"
  >
    <div class="container">
      <span class="block pb-8"></span>

      <section>
        <slot />
      </section>

      <span class="block pb-[200px]"></span>
    </div>
  </div>

  {
    pubDate && (
      <ArticleSchema
        article={{
          title,
          description,
          author,
          pubDate,
          tags,
          image: frontmatter.image,
        }}
        url={currentUrl}
      />
    )
  }
</Base>
